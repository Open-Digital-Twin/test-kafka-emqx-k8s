apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: zookeeper
  name: zookeeper
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      service: zookeeper
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        service: zookeeper
    spec:
      enableServiceLinks: false
      containers:
        - name: zookeeper
          imagePullPolicy: IfNotPresent
          image: {{ .Values.confluent.zookeeper }}:{{ .Values.confluent.version }}
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_DATA_DIR
              value: "/zookeeper/data"
            - name: ZOOKEEPER_LOG_DIR
              value: "/zookeeper/log"
            - name: ZOOKEEPER_SERVER_ID
              value: "1"
          resources: {}
          volumeMounts:
            - mountPath: /zookeeper/data
              name: zookeeper-data
            - mountPath: /zookeeper/log
              name: zookeeper-log
      hostname: zookeeper
      restartPolicy: Always
      nodeName: molejo
      nodeSelector:
        nodetype: server
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "rook-ceph-block"
        resources:
          requests:
            storage: 250Mi
    - metadata:
        name: zookeeper-log
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "rook-ceph-block"
        resources:
          requests:
            storage: 250Mi
